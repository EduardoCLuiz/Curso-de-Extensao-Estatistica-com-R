vetor1 <- c(1:10)
vetor1
length(vetor1)
mode(vetor1)
class(vetor1)
typeof(vetor1)
matriz1 <- matrix(1:10, nrow =2)
matriz1
length(matriz1)
mode(matriz1)
class(matriz1)
typeof(matriz1)
array1 <- array(1:5, dim=c(3,3,3))
array1
lenght(array1)
mode(array1)
class(array1)
typeof(array1)
View(iris)
lenght(iris)
mode(iris)
class(iris)
typeof(iris)
length(iris)
lista1 <- list(a=matriz1, b=vetor1)
lista1
length(lista1)
mode(lista1)
class(lista1)
typeof(lista1)
func1 <- function(x){
var1 <- x * x
return(var1)
}
func1(5)
class(func1)
# Removendo objetos
objects()
rm(array1, func1)
objects()
# Vetores de caracteres
vetor_caracter = c("Olá", "DSA")
vetor_caracter
# Vetor de floats
Vetor_numerico = c(1.90, 45.3, 300.5)
Vetor_numerico
# Vetor de valores complexos
vetor_complexo = c(5.2+3i, 3.8+4i)
vetor_complexo
# vetor de números inteiros
vetor_integer = c(2,4,6,8,10)
vetor_integer
#Utilizando seq()
vetor1 = seq(1:10)
vetor1
is.vector(vetor1)
# Utilizando rep()
vetor2 = rep(1:5)
vetor2
# Indexação de vetores
a <- c(1,2,3,4,5)
a
a[1]
a[6]
b <- c("Data", "Science")
b
b[1]
b[2]
b[3]
#Combinando vetores
v1 = c(2,3,5)
v2 = c("aa","bb","cc","dd","ee")
c(v1,v2)
# Operações com vetores
x = c(1,3,5,7)
y = c(2,4,6,8)
x * 5
x +y
x + y
x - y
x * y
x / y
# Somando vetores comnúmeros diferentes de elementos
alfa = c(10,20,30)
beta = c(1,2,3,4,5,6,7,8,9)
alfa + beta
# Vator nomeado
v = c("Barck", "Obama")
v
names(v) = c("Nome","Sobrenome")
v
v["Nome"]
# numeros de linhas
matrix (c(1,2,3,4,5,6), nr = 2)
matrix (c(1,2,3,4,5,6), nr = 3)
matrix (c(1,2,3,4,5,6), nr = 6)
# Número de Colunas
matrix (c(1,2,3,4,5,6), nc = 2)
# Número de Colunas
matrix (c(1,2,3,4,5), nc = 2)
# Criando matrizes a partir de vetores e preenchendo a partir
meus_dados = c(1:10)
matrix(data = meus_dados, nrow = 5, ncol = 2, byrow = T)
matrix(data = meus_dados, nrow = 5, ncol = 2)
# Fatiando a matriz
mat <- matrix(c(2,3,4,5), nr = 2)
mat
mat[1,2]
mat[2,2]
mat[1,3]
mat[,2]
# Criando uma matriz diagonal
matriz = 1:3
diag(matriz)
#Extraindo vetor de uma matriz diagonal
vetor = diago (matriz)
diag (vetor)
#Extraindo vetor de uma matriz diagonal
vetor = diag (matriz)
diag (vetor)
# Transposta da matriz
W <- matrix (c(2,4,8,12), nr = 2, ncol = 2)
W
t(W)
U <- t(W)
U
#Obtendo uma matriz inversa
solve(W)
# Multiplicação de matrizes
mat1 <- matrix(c(2,3,4,5), nr = 2)
mat1
mat2 <- matrix(c(6,7,8,9), nr = 2)
mat2
mat1 * mat2
mat1 / mat2
mat1 + mat2
mat1 - mat2
# Combinando Matrizes
mat4 <- matrix(c(2,3,4,5), nr = 2)
mat4
mat5 <- matrix(c(6,7,8,9), nr = 2)
mat5
cbind(mat4, mat5)
rbind(mat4, mat5)
# Desconstruindo a matriz
c(mat4)
install.packages(c("cli", "crayon", "digest", "htmltools", "lifecycle", "pbdZMQ", "pillar", "rlang", "tibble", "utf8", "uuid"))
install.packages(c("lattice", "mgcv", "nlme", "survival"), lib="C:/Program Files/R/R-4.1.1/library")
library(tidyverse)
library(kableExtra)
setwd("C:/Users/Eduardo/Documents/MeusProjetos/Curso-de-Extensao-Estatistica-com-R")
df <- read_csv("alcohol.csv",
col_types = cols(status = col_factor()),
locale = locale(decimal_mark = ','))
glimpse(df)
summary(df)
df %>%
summarise(Porcentagem_Abuso = mean(abuse)*100,
Porcentagem_NaoAbusa = 100 - Porcentagem_Abuso)
# Letra b =======================================================
summary(df$unemrate)
df %>%
summarise(abuse = "Geral",
Mínimo = min(unemrate),
Média = mean(unemrate),
Mediana = median(unemrate),
Desvio = sd(unemrate),
Máximo = max(unemrate),
Amostra = n())
df %>%
group_by(abuse) %>%
summarise(Mínimo = min(unemrate),
Média = mean(unemrate),
Mediana = median(unemrate),
Desvio = sd(unemrate),
Máximo = max(unemrate),
Amostra = n())
# Letra c =================================================
df %>%
summarise(abuse = "Geral",
Mínimo = min(age),
Média = mean(age),
Mediana = median(age),
Desvio = sd(age),
Máximo = max(age),
Amostra = n())
df %>%
group_by(abuse) %>%
summarise(Mínimo = min(age),
Média = mean(age),
Mediana = median(age),
Desvio = sd(age),
Máximo = max(age),
Amostra = n())
# Letra d ==============================================
df %>%
summarise(abuse = "Geral",
Mínimo = min(educ),
Média = mean(educ),
Mediana = median(educ),
Desvio = sd(educ),
Máximo = max(educ),
Amostra = n())
df %>%
group_by(abuse) %>%
summarise(Mínimo = min(educ),
Média = mean(educ),
Mediana = median(educ),
Desvio = sd(educ),
Máximo = max(educ),
Amostra = n())
# Letra o =========================================
df %>%
select(age, educ) %>%
cor()
esquisse::esquisser(df,
viewer = "browser")
ggplot(df) +
aes(x = educ) +
geom_histogram(bins = 30L, fill = "#EF562D") +
theme_minimal()
library(plotrix)
pie3D(df, col=c("firebrick3","darkgoldenrod2","dodgerblue4"),
labels=names(tab), labelcex=1)
pie3D(df, col=c("firebrick3","darkgoldenrod2","dodgerblue4"),
labels=names(tab), labelcex=1)
pie3D(df, col=c("firebrick3","darkgoldenrod2","dodgerblue4"),
labels=names(tab), labelcex=1)
df %>%
summarise(Porcentagem_Abuso = mean(abuse)*100,
Porcentagem_NaoAbusa = 100 - Porcentagem_Abuso)
df %>%
Por_abu <- summarise(Porcentagem_Abuso = mean(abuse)*100,
Porcentagem_NaoAbusa = 100 - Porcentagem_Abuso)
df %>%
Por_abu <- summarise(Porcentagem_Abuso = mean(abuse)*100,
Porcentagem_NaoAbusa = 100 - Porcentagem_Abuso)
df %>%
Por_abu <- summarise(Porcentagem_Abuso = mean(abuse)*100,
Porcentagem_NaoAbusa = 100 - Porcentagem_Abuso)
# Letra b =======================================================
summary(df$unemrate)
df %>%
summarise(abuse = "Geral",
Mínimo = min(unemrate),
Média = mean(unemrate),
Mediana = median(unemrate),
Desvio = sd(unemrate),
Máximo = max(unemrate),
Amostra = n())
df %>%
group_by(abuse) %>%
summarise(Mínimo = min(unemrate),
Média = mean(unemrate),
Mediana = median(unemrate),
Desvio = sd(unemrate),
Máximo = max(unemrate),
Amostra = n())
df %>%
Por_abu <- summarise(Porcentagem_Abuso = mean(abuse)*100,
Porcentagem_NaoAbusa = 100 - Porcentagem_Abuso)
df %>%
summarise(Porcentagem_Abuso = mean(abuse)*100,
Porcentagem_NaoAbusa = 100 - Porcentagem_Abuso)
por_abu <- Porcentagem_Abuso,Porcentagem_NaoAbusa
por_abu <- "Porcentagem_Abuso","Porcentagem_NaoAbusa"
por_abu <- "Porcentagem_Abuso""Porcentagem_NaoAbusa"
por_abu <- "Porcentagem_Abuso"
por_abu
por_abu <- summarise
por_abu
df %>%
summarise(Porcentagem_Abuso = mean(abuse)*100,
Porcentagem_NaoAbusa = 100 - Porcentagem_Abuso)
por_abu <- summarise
por_abu
por_abu <-
df %>%
por_abu <-summarise(Porcentagem_Abuso = mean(abuse)*100,
Porcentagem_NaoAbusa = 100 - Porcentagem_Abuso)
por_abu <- df %>%
summarise(Porcentagem_Abuso = mean(abuse)*100,
Porcentagem_NaoAbusa = 100 - Porcentagem_Abuso)
por_abu
pie3D(por_abu, col=c("firebrick3","darkgoldenrod2","dodgerblue4"),
labels=names(tab), labelcex=1)
library(plotrix)
install.packages("plotrix")
library(plotrix)
pie3D(por_abu, col=c("firebrick3","darkgoldenrod2","dodgerblue4"),
labels=names(tab), labelcex=1)
por_abu
pie(por_abu,col=c("firebrick3","darkgoldenrod2","dodgerblue4"))
pie(por_abu(values$unemployed))
pie(table(values$unemployed))
pie(por_abu,col=c("firebrick3","darkgoldenrod2","dodgerblue4"))
summary(df)
# Letra c =================================================
df %>%
summarise(abuse = "Geral",
Mínimo = min(age),
Média = mean(age),
Mediana = median(age),
Desvio = sd(age),
Máximo = max(age),
Amostra = n())
por_abu <- df %>%
group_by(abuse) %>%
summarise(Mínimo = min(age),
Média = mean(age),
Mediana = median(age),
Desvio = sd(age),
Máximo = max(age),
Amostra = n())
pie(por_abu,col=c("firebrick3","darkgoldenrod2","dodgerblue4"))
pie(por_abu)
por_abu
names(por_abu)
pie(por_abu,col=c("firebrick3","darkgoldenrod2","dodgerblue4"))
pie(por_abu$RelFreq)
typeof(por_abu)
ggplot(df) +
aes(x = educ) +
geom_histogram(bins = 30L, fill = "#EF562D") +
theme_minimal()
esquisse::esquisser(df,
viewer = "browser")
pie(age,col=c("firebrick3","darkgoldenrod2","dodgerblue4"))
pie3D(age, col=c("firebrick3","darkgoldenrod2","dodgerblue4"),
labels=names(tab), labelcex=1)
pie(age,col=c("firebrick3","darkgoldenrod2","dodgerblue4"))
age <- df %>%
group_by(abuse) %>%
summarise(Mínimo = min(age),
Média = mean(age),
Mediana = median(age),
Desvio = sd(age),
Máximo = max(age),
Amostra = n())
pie3D(age, col=c("firebrick3","darkgoldenrod2","dodgerblue4"),
labels=names(tab), labelcex=1)
pie3D(age$Amostra, col=c("firebrick3","darkgoldenrod2","dodgerblue4"),
labels=names(tab), labelcex=1)
pie3D(age$Amostra, col=c("firebrick3","darkgoldenrod2","dodgerblue4"),
labels=names(age), labelcex=1)
pie3D(age$Amostra, col=c("firebrick3","darkgoldenrod2","dodgerblue4"),
labels=names(age))
pie3D(age, col=c("firebrick3","darkgoldenrod2","dodgerblue4"),
labels=names(age))
pie3D(age$abuse,col=c("firebrick3","darkgoldenrod2","dodgerblue4"),
labels=names(age))
pie3D(age$age,col=c("firebrick3","darkgoldenrod2","dodgerblue4"),
labels=names(age))
pie3D(df$age,col=c("firebrick3","darkgoldenrod2","dodgerblue4"),
labels=names(age))
pie3D(df$age,col=c("firebrick3","darkgoldenrod2","dodgerblue4"),
labels=names(age))
pie3D(df$age,col=c("firebrick3","darkgoldenrod2","dodgerblue4")
pie3D(df$age)
pie3D(df$age)
pie3D(df$abuse)
pie(df$abuse,col=c("firebrick3","darkgoldenrod2","dodgerblue4"))
esquisse::esquisser(df,
viewer = "browser")
esquisse::esquisser(df,
viewer = "browser")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(kableExtra)
library(htmltools)
library(ggplot2)
library(plotrix)
setwd("C:/Users/Eduardo/Documents/MeusProjetos/Curso-de-Extensao-Estatistica-com-R")
df <- read_csv("alcohol.csv",
col_types = cols(status = col_factor()),
locale = locale(decimal_mark = ','))
glimpse(df)
summary(df)
df$abuse
df %>%
summarise(Porcentagem_Abuso = mean(abuse)*100,
Porcentagem_NaoAbusa = 100 - Porcentagem_Abuso)
df$educ
df %>%
summarise(abuse = "Geral",
Mínimo = min(educ),
Média = mean(educ),
Mediana = median(educ),
Desvio = sd(educ),
Máximo = max(educ),
Amostra = n())
df %>%
group_by(abuse) %>%
summarise(Mínimo = min(educ),
Média = mean(educ),
Mediana = median(educ),
Desvio = sd(educ),
Máximo = max(educ),
Amostra = n())
df$age
